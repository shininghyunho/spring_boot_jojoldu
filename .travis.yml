# travis에서 CI하는 과정
language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 HOME (같은 의존성은 다음 배포때무터 다시 받지 않기 위함)
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
# master 브랜치에 푸시되었을때 수행되는 명령어
script: "./gradlew clean build"

before_install:
  - chmod +x gradlew
  - zip -r spring-boot-jojoldu-webservice * # CodeDeploy는 jar를 인식못해서 zip으로 압축
  - mkdir -p deploy
  - mv spring-boot-jojoldu-webservice.zip deploy/spring-boot-jojoldu-webservice.zip

deploy:
  # for s3
  - provider: s3
    access_key_id:
      secure: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값들
    secret_access_key: $AWS_SECRET_KEY
    bucket: jojoldu-springboot-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근
    local_dir: deploy # before_deploy에서 생성한 디렉토리들
    wait-until-deployed: true
    # for codeDeploy
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo setting에 설정된 값들
    secret_access_key: $AWS_SECRET_KEY
    bucket: jojoldu-springboot-build # S3 버킷
    key: spring-boot-jojoldu-webservice.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: spring-boot-jojoldu-webservice # 웹 콘솔에서 등록한 codeDeploy 애플리케이션
    deployment_group: spring-boot-jojoldu-webservice-group
    region: ap-northeast-2
    wati-until-deployed: true

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - gusgh3315@gmail.com